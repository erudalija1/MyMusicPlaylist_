// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyMusicPlaylist.Models;

namespace MyMusicPlaylist.Migrations
{
    [DbContext(typeof(PlayLisContext))]
    partial class PlayLisContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("MyMusicPlaylist.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("MyMusicPlaylist.Models.Song", b =>
                {
                    b.Property<int>("SongId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOfInput")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfLastEdit")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Favourite")
                        .HasColumnType("bit");

                    b.Property<string>("Performer")
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Review")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Url")
                        .HasColumnType("varchar(100)");

                    b.HasKey("SongId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Songs");
                });

            modelBuilder.Entity("MyMusicPlaylist.Models.Song", b =>
                {
                    b.HasOne("MyMusicPlaylist.Models.Category", "SongCategory")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SongCategory");
                });
#pragma warning restore 612, 618
        }
    }
}
